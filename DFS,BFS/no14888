import java.util.*;
import java.io.*;

public class no14888 {
	static int N;
	static int number[];
	static int x[];
	static int max = -100000000;
	static int min = 100000000;

	public static void main(String[] args) throws Exception {
		Scanner input = new Scanner(System.in);
		N = input.nextInt();
		number = new int[N];
		for (int i = 0; i < number.length; i++) {
			number[i] = input.nextInt(); // 숫자가 들어있는 배열
		}
		x = new int[4]; // 연산자가 들어있는 배열
		for (int i = 0; i < 4; i++) {
			x[i] = input.nextInt();
		}

		dfs(number[0], 0);
		
		System.out.println(max);
		System.out.println(min);
		// TODO Auto-generated method stub

	}

	private static void dfs(int result, int count) {
		if (count == N - 1) {
			if (min > result) {
				min = result;
			}
			if (max < result) {
				max = result;
			}
			return;
		}

		for (int i = 0; i < 4; i++) {
			if (x[i] != 0) {
				--x[i];
				if (i == 0) {
					dfs(result + number[count + 1], count + 1);

				} else if (i == 1) {
					dfs(result - number[count + 1], count + 1);

				} else if (i == 2) {
					dfs(result * number[count + 1], count + 1);

				} else if (i == 3) {
					dfs(result / number[count + 1], count + 1);

				}
				++x[i];
			}

		}
		// TODO Auto-generated method stub

	}

}
